这里我用到两种方法实现页面的转换（1）Activity（2）button点击
1.首先要在Andriod Manifest.xml中添加<activity android:name=".SecondActivity"></activity>//添加第二个Activity
2.接下来新建一个Activity：SecondActivity.java
内容如下：
package com.example.lenovo.myapplication;

import android.app.Activity;
import android.os.Bundle;

public class SecondActivity extends Activity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_second);
        
        Button button=(Button) this.findViewById(R.id.back);
        button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                finish();
            }
        });//返回到上一个页面
    }
    @Override
    public void onStart() {
        super.onStart();

    }
    @Override
    protected void onRestart(){
        super.onRestart();

    }

    @Override
    protected void onResume(){
        super.onResume();

    }

    @Override
    protected void onPause(){
        super.onPause();

    }
    @Override
    protected void onStop(){
        super.onStop();

    }
    @Override
    protected void onDestroy(){
        super.onDestroy();

    }

}
3.在MainActivity.java编辑：
package com.example.lenovo.myapplication;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;

public class MainActivity extends Activity{
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        findViewById(R.id.btnGo).setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Intent intent=new Intent(MainActivity.this,SecondActivity.class);
                startActivity(intent);
            }
        });
//        Button button=(Button) this.findViewById(R.id.btnGo);
//        button.setOnClickListener(new View.OnClickListener() {
//            @Override
//            public void onClick(View view) {
//                setContentView(R.layout.activity_second);
//            }
//        });//方案二通过按钮方法前进到另一个页面

    }
    @Override
    protected void onStart() {
        super.onStart();

    }
    @Override
    protected void onRestart(){
        super.onRestart();

    }

    protected void onResume(){
        super.onResume();

    }

    protected void onPause(){
        super.onPause();

    }
    protected void onStop(){
        super.onStop();

    }
    protected void onDestroy(){
        super.onDestroy();

    }
}
4.相应的xml文件
activity_main.xml:
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent">
    <Button
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_gravity="bottom"
        android:text="跳转"
        android:id="@+id/btnGo"
        android:layout_marginLeft="20dp"
        android:layout_marginTop="20dp"></Button>
</LinearLayout>


activity_second.xml:
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical">
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:gravity="center_horizontal"
        android:text="第二个页面"
        android:textSize="25dp"
        android:layout_marginTop="200dp"
        />
    <Button
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginTop="200dp"
        android:id="@+id/back"
        android:text="返回"/>

</LinearLayout>
